name: Run Gradio app until ready

inputs:
  script:
    required: true
  project:
    required: true
  timeout:
    required: false
    default: 3600

runs:
  using: 'composite'
  steps:
    - name: Run Gradio App
      shell: bash
      run: |
        cd ${{ inputs.project }}

        if [ "${{ runner.os }}" == "Linux" ]; then
          # Start the Gradio app in the background
          xvfb-run python ${{ inputs.script }} 2>&1 | tee gradio_log.txt &
        else
          python ${{ inputs.script }} 2>&1 | tee gradio_log.txt &
        fi

        # Assign process ID
        app_pid=$(ps aux | grep -i '[p]ython ${{ inputs.script }}' | awk '{print $2}')

        # Wait for the specific log message
        timeout ${{ inputs.timeout }} bash -c "
          (tail -f gradio_log.txt &) | awk '/Demo is ready!/ {exit}'
        "

        # Capture the readiness status
        status=$?

        # Stop the Gradio app process
        echo "Stopping the Gradio app..."
        pkill -P $app_pid || echo "No child processes to kill."
        kill $app_pid || echo "App process already terminated."
        wait $app_pid || echo "App process cleanup complete."

        # Exit with the readiness check status
        exit $status
