name: Run Gradio app until ready

inputs:
  script:
    required: true
  project:
    required: true

runs:
  using: 'composite'
  steps:
    - name: Run Gradio App (Linux/Mac)
      if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: |
        cd ${{ inputs.project }}

        python ${{ inputs.script }} 2>&1 | tee gradio_log.txt &

        # Assign process ID
        python ${{ inputs.script }} > >(tee -a gradio_log.txt) 2>&1 &
        app_pid=$!

        set +o pipefail
        # Wait for the specific log message
        tail -n +1 -f gradio_log.txt | grep -m1 -q "Demo is ready!"

        # Capture the readiness status
        status=$?

        # Stop the Gradio app process
        echo "Stopping the Gradio app..."
        pkill -P $app_pid || echo "No child processes to kill."
        kill $app_pid || echo "App process already terminated."
        wait $app_pid || echo "App process cleanup complete."

        # Exit with the readiness check status
        exit $status

    - name: Run Gradio App (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: powershell
      run: |
        cd ${{ inputs.project }}
    
        # Start the app, redirect output to a log, and capture its PID
        $process = Start-Process -FilePath "python" -ArgumentList "${{ inputs.script }}" `
          -RedirectStandardOutput "gradio_log.txt" `
          -RedirectStandardError "gradio_log.txt" `
          -PassThru
    
        Write-Output "Started app (pid $($process.Id)). Waiting for readiness message..."
    
        $found = $false
        # Wait until "Demo is ready!" appears in the log
        while (-not $found -and -not $process.HasExited) {
          Start-Sleep -Seconds 1
          if (Select-String -Path "gradio_log.txt" -Pattern "Demo is ready!") {
            $found = $true
          }
        }
    
        Write-Output "Stopping the Gradio app..."
        try {
          Stop-Process -Id $process.Id -Force
        } catch {
          Write-Output "Process already terminated."
        }
    
        if ($found) {
          exit 0
        } else {
          exit 1
        }
