name: Run Gradio app until ready

inputs:
  script:
    required: true
  project:
    required: true

runs:
  using: 'composite'
  steps:
    - name: Run Gradio App
      shell: bash
      run: |
        cd ${{ inputs.project }}

        python ${{ inputs.script }} 2>&1 | tee gradio_log.txt &

        # Assign process ID
        python ${{ inputs.script }} > >(tee -a gradio_log.txt) 2>&1 &
        app_pid=$!

        set +o pipefail
        # Wait for the specific log message
        tail -n +1 -f gradio_log.txt | grep -m1 -q "Demo is ready!"

        # Capture the readiness status
        status=$?

        echo "Stopping the Gradio app..."
        pkill -P $app_pid 2>/dev/null || true
        kill $app_pid 2>/dev/null || true
        wait $app_pid 2>/dev/null || true
    
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          if tasklist | grep -q "python.exe"; then
            echo "Forcing termination with taskkill..."
            taskkill //PID $app_pid //T //F || true
          fi
        fi
    
        exit $status
